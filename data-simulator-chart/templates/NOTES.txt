1. Data Simulator has been deployed!

{{- if .Values.ingress.enabled }}
2. Application can be accessed through these URLs:
{{- range .Values.ingress.hosts }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ .host }}{{ $.Values.ingress.path }}
{{- end }}
{{- else }}
2. Application is not exposed through Ingress. To access it:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "data-simulator.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "data-simulator.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "data-simulator.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else }}
  To access the application, use port-forwarding:
  kubectl port-forward svc/{{ include "data-simulator.fullname" . }} 8080:80
{{- end }}
{{- end }}

3. To monitor the data generation process:
   kubectl logs -f $(kubectl get pods -l app.kubernetes.io/name={{ include "data-simulator.name" . }} -o jsonpath='{.items[0].metadata.name}')

4. To access the configuration files:
   kubectl exec -it $(kubectl get pods -l app.kubernetes.io/name={{ include "data-simulator.name" . }} -o jsonpath='{.items[0].metadata.name}') -- ls -la /app/data_simulator/config